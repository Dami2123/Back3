paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuarios disponibles en la aplicación web.
      tags:
        - Users
      responses:
        "200":
          description: La operacion fue exitosa!, se retorna un arreglo con los usuarios.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "400":
          description: Se envió un dato no esperado.
        "500":
          description: Error inesperado del servidor, no se puede manejar la solicitud.

    post:
      summary: Crea un nuevo usuario en la aplicación.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses:
        "200":
          description: Usuario creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "400":
          description: Valores incompletos en la solicitud.
        "500":
          description: Error inesperado del servidor, no se puede manejar la solicitud.

  /api/users/{uid}:
    get:
      summary: Obtiene un usuario por ID disponible en la aplicación.
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: Se debe ingresar el id del usuario.
          schema:
            type: string
      responses:
        "200":
          description: La operacion fue exitosa!, se retorna un usuario.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "400":
          description: Se envió un dato no esperado.
        "500":
          description: Error inesperado del servidor, no se puede manejar la solicitud.

    put:
      summary: Actualizar un usuario por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: Se debe ingresar el id del usuario.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses:
        "200":
          description: La operacion fue exitosa!, usuario actualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Se envió un dato no esperado.
        "500":
          description: Error inesperado del servidor, no se puede manejar la solicitud.

    delete:
      summary: Elimina un usuario por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: Se debe ingresar el id del usuario.
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado correctamente
        "404":
          description: Usuario no encontrado
        "500":
          description: Error inesperado del servidor, la solicitud.

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado de Mongo.
        first_name: 
          type: string
          description: Nombre del usuario
        last_name: 
          type: string
          description: Apellido del usuario
        email: 
          type: string
          description: Email del usuario
        password: 
          type: string
          description: Contraseña del usuario
      example:
        _id: ObjectId("647fa8c9e46dbc5a20320181")
        first_name: Nombre de prueba 1
        last_name: Apellido de prueba 1
        email: correodeprueba1@gmail.com
        password: $2b$10$OQA9JT4yRt8NgItEftA0JeSDncDbdqN9TFXiW..69klEUIQ01tcau

  requestBodies:
    updateUser:
      type: object
      properties:
        first_name: 
          type: String
          description: Nombre del usuario
        last_name: 
          type: String
          description: Apellido del usuario
        email: 
          type: String
          description: email del usuario
        password: 
          type: String
          description: contraseña del usuario
      example:
        first_name: Usuario de prueba 1
        last_name: Apellido de prueba 1
        email: correodeprueba1@gmail.com
        password: '123contraseña'